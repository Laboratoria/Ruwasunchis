/*!
 * EBM
 * Easy Box Model boilerplate
 * http://soygus.com
 * @author @MadeByGus
 * @version 1.1.0
 * Copyright 2015. MIT licensed.
 */
!function(a, b) {
    "function" == typeof define && define.amd ? define(b) : a.transformicons = b();
}(this || window, function() {
    "use strict";
    var a = {}, b = "tcon-transform", c = {
        transform: [ "click", "touchstart" ],
        revert: [ "click", "touchstart" ]
    }, d = function(a) {
        return "string" == typeof a ? Array.prototype.slice.call(document.querySelectorAll(a)) : "undefined" == typeof a || a instanceof Array ? a : [ a ];
    }, e = function(a) {
        return "string" == typeof a ? a.toLowerCase().split(" ") : a;
    }, f = function(a, b, f) {
        var h = (f ? "remove" : "add") + "EventListener", i = d(a), j = i.length, k = {};
        for (var l in c) k[l] = b && b[l] ? e(b[l]) : c[l];
        for (;j--; ) for (var m in k) for (var n = k[m].length; n--; ) i[j][h](k[m][n], g);
    }, g = function(b) {
        a.toggle(b.currentTarget);
    };
    return a.add = function(b, c) {
        return f(b, c), a;
    }, a.remove = function(b, c) {
        return f(b, c, !0), a;
    }, a.transform = function(c) {
        return d(c).forEach(function(a) {
            a.classList.add(b);
        }), a;
    }, a.revert = function(c) {
        return d(c).forEach(function(a) {
            a.classList.remove(b);
        }), a;
    }, a.toggle = function(c) {
        return d(c).forEach(function(c) {
            a[c.classList.contains(b) ? "revert" : "transform"](c);
        }), a;
    }, a;
}), function() {
    "use-strict";
    $(document).ready(function() {
        $(".disable-anchors a").click(function(a) {
            a.preventDefault();
        }), $("[data-href]").click(function() {
            var a, b, c, d;
            b = window.location.pathname.split("/"), a = b[b.length - 1], c = b[b.length - 2], 
            d = {}, d[c] = a, window.history.pushState(d, "", a), document.location.replace($(this).data("href"));
        }), transformicons.add(".tcon");
    });
}.call(this), function() {
    "use-strict";
    $(document).ready(function() {
        var a;
        a = new ScrollMagic.Controller(), a.scrollTo(function(a) {
            TweenMax.to(window, .5, {
                scrollTo: {
                    y: a
                }
            });
        }), $(document).on("click", "a[href^=#]", function(b) {
            var c;
            c = $(this).attr("href"), $(c).length > 0 && !c.match(/nav/g) && !c.match(/carousel/g) && (b.preventDefault(), 
            a.scrollTo(c));
        });
    });
}.call(this);